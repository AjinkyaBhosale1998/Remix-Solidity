{
	"id": "ea5fe5957f4039ec7aeff1dcfe81b97d",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.18",
	"solcLongVersion": "0.8.18+commit.87f61d96",
	"input": {
		"language": "Solidity",
		"sources": {
			"learnModifires.sol": {
				"content": "pragma solidity >= 0.7.0 < 0.9.0;\r\n\r\n// Function Modifiers are used to modify the behaviour of a function. \r\n// Function Modifiers are customizable modification for functions\r\n\r\ncontract Owner {\r\n    // function modifiers\r\n    \r\n    address owner;\r\n    \r\n    // when we deploy this contract we want to set the address to the owner (msg.sender)\r\n    \r\n    constructor() public {\r\n        owner = msg.sender; \r\n    }\r\n    \r\n    // to write a modifier we statically declare the modifier keyword and then name it \r\n    // and inside we write our logic and modifications  \r\n    modifier onlyOwner {\r\n        // customizable logic to modify our functions \r\n        require(msg.sender == owner);\r\n        _;\r\n        // the underscore continues with the function \r\n    }\r\n    \r\n    modifier costs(uint price) {\r\n        // what msg.value: the amount in wei being sent with a \r\n        // message to a contract \r\n        require(msg.value >= price);\r\n        _;\r\n    }\r\n    \r\n}\r\n\r\n\r\n// is is a keyword grabbing inheritance from another contract - Owner\r\n\r\ncontract Register is Owner {\r\n    \r\n    // what in this code is currently modifying the functions? \r\n    \r\n   mapping (address => bool) registeredAddresses;\r\n   uint price;\r\n   \r\n   constructor(uint initialPrice) public { \r\n       price = initialPrice; \r\n       \r\n   }\r\n   \r\n   // function register will set msg.sender (current caller) to true\r\n   function register() public payable costs(price) {\r\n       // the logic will modify the outcome \r\n      registeredAddresses[msg.sender] = true;\r\n   }\r\n   \r\n   // onlyOwner is our function modifier that requires\r\n   // only the owner to be able to change the price\r\n   function changePrice(uint _price) public onlyOwner {\r\n      price = _price;\r\n   }\r\n   \r\n}\r\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"learnModifires.sol": {
				"Owner": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"learnModifires.sol\":178:969  contract Owner {... */\n  mstore(0x40, 0x80)\n    /* \"learnModifires.sol\":355:414  constructor() public {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"learnModifires.sol\":395:405  msg.sender */\n  caller\n    /* \"learnModifires.sol\":387:392  owner */\n  0x00\n  dup1\n    /* \"learnModifires.sol\":387:405  owner = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"learnModifires.sol\":178:969  contract Owner {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"learnModifires.sol\":178:969  contract Owner {... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212202f324d08d661101c7c4d78e2acc8428c55007b5667aa9e52900d5a5407366a3264736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_12": {
									"entryPoint": null,
									"id": 12,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550603f80605d6000396000f3fe6080604052600080fdfea26469706673582212202f324d08d661101c7c4d78e2acc8428c55007b5667aa9e52900d5a5407366a3264736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x3F DUP1 PUSH1 0x5D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2F ORIGIN 0x4D ADDMOD 0xD6 PUSH2 0x101C PUSH29 0x4D78E2ACC8428C55007B5667AA9E52900D5A5407366A3264736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "178:791:0:-:0;;;355:59;;;;;;;;;;395:10;387:5;;:18;;;;;;;;;;;;;;;;;;178:791;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea26469706673582212202f324d08d661101c7c4d78e2acc8428c55007b5667aa9e52900d5a5407366a3264736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2F ORIGIN 0x4D ADDMOD 0xD6 PUSH2 0x101C PUSH29 0x4D78E2ACC8428C55007B5667AA9E52900D5A5407366A3264736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "178:791:0:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12600",
								"executionCost": "24332",
								"totalCost": "36932"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 178,
									"end": 969,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 178,
									"end": 969,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 178,
									"end": 969,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 355,
									"end": 414,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 355,
									"end": 414,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 355,
									"end": 414,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 355,
									"end": 414,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 355,
									"end": 414,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 355,
									"end": 414,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 355,
									"end": 414,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 355,
									"end": 414,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 355,
									"end": 414,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 355,
									"end": 414,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 355,
									"end": 414,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 395,
									"end": 405,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 387,
									"end": 392,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 387,
									"end": 392,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 387,
									"end": 405,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 387,
									"end": 405,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 387,
									"end": 405,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 387,
									"end": 405,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 387,
									"end": 405,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 387,
									"end": 405,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 387,
									"end": 405,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 387,
									"end": 405,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 387,
									"end": 405,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 387,
									"end": 405,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 387,
									"end": 405,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 387,
									"end": 405,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 387,
									"end": 405,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 387,
									"end": 405,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 387,
									"end": 405,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 387,
									"end": 405,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 387,
									"end": 405,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 387,
									"end": 405,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 178,
									"end": 969,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 178,
									"end": 969,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 178,
									"end": 969,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 178,
									"end": 969,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 178,
									"end": 969,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 178,
									"end": 969,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 178,
									"end": 969,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212202f324d08d661101c7c4d78e2acc8428c55007b5667aa9e52900d5a5407366a3264736f6c63430008120033",
									".code": [
										{
											"begin": 178,
											"end": 969,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 178,
											"end": 969,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 178,
											"end": 969,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 178,
											"end": 969,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 178,
											"end": 969,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 178,
											"end": 969,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"learnModifires.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"learnModifires.sol\":\"Owner\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"learnModifires.sol\":{\"keccak256\":\"0x9af575fa4debcd72a29ecce5301f647dcfd41377117d7a6ae4b95b6ee75cd591\",\"urls\":[\"bzz-raw://df8346fbee9d4e369eb7b41e9512dcd7a493d6247ef4381d30fcd85047adbd55\",\"dweb:/ipfs/QmPTKrt8553zdwPPy3sePdXEHqKYDN6SFeT2s5EA6zVZFT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 3,
								"contract": "learnModifires.sol:Owner",
								"label": "owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Register": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "initialPrice",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_price",
									"type": "uint256"
								}
							],
							"name": "changePrice",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "register",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"learnModifires.sol\":1048:1752  contract Register is Owner {... */\n  mstore(0x40, 0x80)\n    /* \"learnModifires.sol\":1230:1316  constructor(uint initialPrice) public { ... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"learnModifires.sol\":395:405  msg.sender */\n  caller\n    /* \"learnModifires.sol\":387:392  owner */\n  0x00\n  dup1\n    /* \"learnModifires.sol\":387:405  owner = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"learnModifires.sol\":1287:1299  initialPrice */\n  dup1\n    /* \"learnModifires.sol\":1279:1284  price */\n  0x02\n    /* \"learnModifires.sol\":1279:1299  price = initialPrice */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"learnModifires.sol\":1230:1316  constructor(uint initialPrice) public { ... */\n  pop\n    /* \"learnModifires.sol\":1048:1752  contract Register is Owner {... */\n  jump(tag_8)\n    /* \"#utility.yul\":88:205   */\ntag_10:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:411   */\ntag_12:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":400:405   */\n  dup2\n    /* \"#utility.yul\":389:405   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:411   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":417:539   */\ntag_13:\n    /* \"#utility.yul\":490:514   */\n  tag_21\n    /* \"#utility.yul\":508:513   */\n  dup2\n    /* \"#utility.yul\":490:514   */\n  tag_12\n  jump\t// in\ntag_21:\n    /* \"#utility.yul\":483:488   */\n  dup2\n    /* \"#utility.yul\":480:515   */\n  eq\n    /* \"#utility.yul\":470:533   */\n  tag_22\n  jumpi\n    /* \"#utility.yul\":529:530   */\n  0x00\n    /* \"#utility.yul\":526:527   */\n  dup1\n    /* \"#utility.yul\":519:531   */\n  revert\n    /* \"#utility.yul\":470:533   */\ntag_22:\n    /* \"#utility.yul\":417:539   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":545:688   */\ntag_14:\n    /* \"#utility.yul\":602:607   */\n  0x00\n    /* \"#utility.yul\":633:639   */\n  dup2\n    /* \"#utility.yul\":627:640   */\n  mload\n    /* \"#utility.yul\":618:640   */\n  swap1\n  pop\n    /* \"#utility.yul\":649:682   */\n  tag_24\n    /* \"#utility.yul\":676:681   */\n  dup2\n    /* \"#utility.yul\":649:682   */\n  tag_13\n  jump\t// in\ntag_24:\n    /* \"#utility.yul\":545:688   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":694:1045   */\ntag_3:\n    /* \"#utility.yul\":764:770   */\n  0x00\n    /* \"#utility.yul\":813:815   */\n  0x20\n    /* \"#utility.yul\":801:810   */\n  dup3\n    /* \"#utility.yul\":792:799   */\n  dup5\n    /* \"#utility.yul\":788:811   */\n  sub\n    /* \"#utility.yul\":784:816   */\n  slt\n    /* \"#utility.yul\":781:900   */\n  iszero\n  tag_26\n  jumpi\n    /* \"#utility.yul\":819:898   */\n  tag_27\n  tag_10\n  jump\t// in\ntag_27:\n    /* \"#utility.yul\":781:900   */\ntag_26:\n    /* \"#utility.yul\":939:940   */\n  0x00\n    /* \"#utility.yul\":964:1028   */\n  tag_28\n    /* \"#utility.yul\":1020:1027   */\n  dup5\n    /* \"#utility.yul\":1011:1017   */\n  dup3\n    /* \"#utility.yul\":1000:1009   */\n  dup6\n    /* \"#utility.yul\":996:1018   */\n  add\n    /* \"#utility.yul\":964:1028   */\n  tag_14\n  jump\t// in\ntag_28:\n    /* \"#utility.yul\":954:1028   */\n  swap2\n  pop\n    /* \"#utility.yul\":910:1038   */\n  pop\n    /* \"#utility.yul\":694:1045   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"learnModifires.sol\":1048:1752  contract Register is Owner {... */\ntag_8:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"learnModifires.sol\":1048:1752  contract Register is Owner {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x1aa3a008\n      eq\n      tag_2\n      jumpi\n      dup1\n      0xa2b40d19\n      eq\n      tag_3\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"learnModifires.sol\":1396:1544  function register() public payable costs(price) {... */\n    tag_2:\n      tag_4\n      tag_5\n      jump\t// in\n    tag_4:\n      stop\n        /* \"learnModifires.sol\":1663:1744  function changePrice(uint _price) public onlyOwner {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_6\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_6:\n      pop\n      tag_7\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_8\n      swap2\n      swap1\n      tag_9\n      jump\t// in\n    tag_8:\n      tag_10\n      jump\t// in\n    tag_7:\n      stop\n        /* \"learnModifires.sol\":1396:1544  function register() public payable costs(price) {... */\n    tag_5:\n        /* \"learnModifires.sol\":1437:1442  price */\n      sload(0x02)\n        /* \"learnModifires.sol\":934:939  price */\n      dup1\n        /* \"learnModifires.sol\":921:930  msg.value */\n      callvalue\n        /* \"learnModifires.sol\":921:939  msg.value >= price */\n      lt\n      iszero\n        /* \"learnModifires.sol\":913:940  require(msg.value >= price) */\n      tag_12\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_12:\n        /* \"learnModifires.sol\":1533:1537  true */\n      0x01\n        /* \"learnModifires.sol\":1499:1518  registeredAddresses */\n      dup1\n        /* \"learnModifires.sol\":1499:1530  registeredAddresses[msg.sender] */\n      0x00\n        /* \"learnModifires.sol\":1519:1529  msg.sender */\n      caller\n        /* \"learnModifires.sol\":1499:1530  registeredAddresses[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"learnModifires.sol\":1499:1537  registeredAddresses[msg.sender] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"learnModifires.sol\":1396:1544  function register() public payable costs(price) {... */\n      pop\n      jump\t// out\n        /* \"learnModifires.sol\":1663:1744  function changePrice(uint _price) public onlyOwner {... */\n    tag_10:\n        /* \"learnModifires.sol\":681:686  owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"learnModifires.sol\":667:686  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"learnModifires.sol\":667:677  msg.sender */\n      caller\n        /* \"learnModifires.sol\":667:686  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"learnModifires.sol\":659:687  require(msg.sender == owner) */\n      tag_15\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_15:\n        /* \"learnModifires.sol\":1731:1737  _price */\n      dup1\n        /* \"learnModifires.sol\":1723:1728  price */\n      0x02\n        /* \"learnModifires.sol\":1723:1737  price = _price */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"learnModifires.sol\":1663:1744  function changePrice(uint _price) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_18:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:411   */\n    tag_20:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":400:405   */\n      dup2\n        /* \"#utility.yul\":389:405   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:411   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":417:539   */\n    tag_21:\n        /* \"#utility.yul\":490:514   */\n      tag_29\n        /* \"#utility.yul\":508:513   */\n      dup2\n        /* \"#utility.yul\":490:514   */\n      tag_20\n      jump\t// in\n    tag_29:\n        /* \"#utility.yul\":483:488   */\n      dup2\n        /* \"#utility.yul\":480:515   */\n      eq\n        /* \"#utility.yul\":470:533   */\n      tag_30\n      jumpi\n        /* \"#utility.yul\":529:530   */\n      0x00\n        /* \"#utility.yul\":526:527   */\n      dup1\n        /* \"#utility.yul\":519:531   */\n      revert\n        /* \"#utility.yul\":470:533   */\n    tag_30:\n        /* \"#utility.yul\":417:539   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":545:684   */\n    tag_22:\n        /* \"#utility.yul\":591:596   */\n      0x00\n        /* \"#utility.yul\":629:635   */\n      dup2\n        /* \"#utility.yul\":616:636   */\n      calldataload\n        /* \"#utility.yul\":607:636   */\n      swap1\n      pop\n        /* \"#utility.yul\":645:678   */\n      tag_32\n        /* \"#utility.yul\":672:677   */\n      dup2\n        /* \"#utility.yul\":645:678   */\n      tag_21\n      jump\t// in\n    tag_32:\n        /* \"#utility.yul\":545:684   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":690:1019   */\n    tag_9:\n        /* \"#utility.yul\":749:755   */\n      0x00\n        /* \"#utility.yul\":798:800   */\n      0x20\n        /* \"#utility.yul\":786:795   */\n      dup3\n        /* \"#utility.yul\":777:784   */\n      dup5\n        /* \"#utility.yul\":773:796   */\n      sub\n        /* \"#utility.yul\":769:801   */\n      slt\n        /* \"#utility.yul\":766:885   */\n      iszero\n      tag_34\n      jumpi\n        /* \"#utility.yul\":804:883   */\n      tag_35\n      tag_18\n      jump\t// in\n    tag_35:\n        /* \"#utility.yul\":766:885   */\n    tag_34:\n        /* \"#utility.yul\":924:925   */\n      0x00\n        /* \"#utility.yul\":949:1002   */\n      tag_36\n        /* \"#utility.yul\":994:1001   */\n      dup5\n        /* \"#utility.yul\":985:991   */\n      dup3\n        /* \"#utility.yul\":974:983   */\n      dup6\n        /* \"#utility.yul\":970:992   */\n      add\n        /* \"#utility.yul\":949:1002   */\n      tag_22\n      jump\t// in\n    tag_36:\n        /* \"#utility.yul\":939:1002   */\n      swap2\n      pop\n        /* \"#utility.yul\":895:1012   */\n      pop\n        /* \"#utility.yul\":690:1019   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212203aef4eb74453bc0cbb664b975d14cb8a390404b18c035f141d05d733532c5d4f64736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_12": {
									"entryPoint": null,
									"id": 12,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_55": {
									"entryPoint": null,
									"id": 55,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 165,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 186,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 132,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 127,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 142,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1048:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:1",
														"type": ""
													}
												],
												"src": "7:75:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "400:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:1",
														"type": ""
													}
												],
												"src": "334:77:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "460:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "517:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "526:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "529:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "519:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "519:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "519:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "483:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "508:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "490:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "490:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "480:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "480:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "473:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "473:43:1"
															},
															"nodeType": "YulIf",
															"src": "470:63:1"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "453:5:1",
														"type": ""
													}
												],
												"src": "417:122:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "608:80:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "618:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "633:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "627:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "627:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "618:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "676:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "649:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "649:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "649:33:1"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "586:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "594:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "602:5:1",
														"type": ""
													}
												],
												"src": "545:143:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "771:274:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "817:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "819:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "819:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "819:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "792:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "801:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "788:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "788:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "813:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "784:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "784:32:1"
															},
															"nodeType": "YulIf",
															"src": "781:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "910:128:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "925:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "939:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "929:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "954:74:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1000:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1011:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "996:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "996:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1020:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "964:31:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "964:64:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "954:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "741:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "752:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "764:6:1",
														"type": ""
													}
												],
												"src": "694:351:1"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506040516102c13803806102c1833981810160405281019061003291906100ba565b336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600281905550506100e7565b600080fd5b6000819050919050565b61009781610084565b81146100a257600080fd5b50565b6000815190506100b48161008e565b92915050565b6000602082840312156100d0576100cf61007f565b5b60006100de848285016100a5565b91505092915050565b6101cb806100f66000396000f3fe6080604052600436106100295760003560e01c80631aa3a0081461002e578063a2b40d1914610038575b600080fd5b610036610061565b005b34801561004457600080fd5b5061005f600480360381019061005a9190610168565b6100cb565b005b6002548034101561007157600080fd5b60018060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461012357600080fd5b8060028190555050565b600080fd5b6000819050919050565b61014581610132565b811461015057600080fd5b50565b6000813590506101628161013c565b92915050565b60006020828403121561017e5761017d61012d565b5b600061018c84828501610153565b9150509291505056fea26469706673582212203aef4eb74453bc0cbb664b975d14cb8a390404b18c035f141d05d733532c5d4f64736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x2C1 CODESIZE SUB DUP1 PUSH2 0x2C1 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x32 SWAP2 SWAP1 PUSH2 0xBA JUMP JUMPDEST CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x2 DUP2 SWAP1 SSTORE POP POP PUSH2 0xE7 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x97 DUP2 PUSH2 0x84 JUMP JUMPDEST DUP2 EQ PUSH2 0xA2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xB4 DUP2 PUSH2 0x8E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD0 JUMPI PUSH2 0xCF PUSH2 0x7F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xDE DUP5 DUP3 DUP6 ADD PUSH2 0xA5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1CB DUP1 PUSH2 0xF6 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x29 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1AA3A008 EQ PUSH2 0x2E JUMPI DUP1 PUSH4 0xA2B40D19 EQ PUSH2 0x38 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x36 PUSH2 0x61 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x44 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5A SWAP2 SWAP1 PUSH2 0x168 JUMP JUMPDEST PUSH2 0xCB JUMP JUMPDEST STOP JUMPDEST PUSH1 0x2 SLOAD DUP1 CALLVALUE LT ISZERO PUSH2 0x71 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x123 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x2 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x145 DUP2 PUSH2 0x132 JUMP JUMPDEST DUP2 EQ PUSH2 0x150 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x162 DUP2 PUSH2 0x13C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x17E JUMPI PUSH2 0x17D PUSH2 0x12D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x18C DUP5 DUP3 DUP6 ADD PUSH2 0x153 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GASPRICE 0xEF 0x4E 0xB7 PREVRANDAO MSTORE8 0xBC 0xC 0xBB PUSH7 0x4B975D14CB8A39 DIV DIV 0xB1 DUP13 SUB 0x5F EQ SAR SDIV 0xD7 CALLER MSTORE8 0x2C 0x5D 0x4F PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "1048:704:0:-:0;;;1230:86;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;395:10;387:5;;:18;;;;;;;;;;;;;;;;;;1287:12;1279:5;:20;;;;1230:86;1048:704;;88:117:1;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:143::-;602:5;633:6;627:13;618:22;;649:33;676:5;649:33;:::i;:::-;545:143;;;;:::o;694:351::-;764:6;813:2;801:9;792:7;788:23;784:32;781:119;;;819:79;;:::i;:::-;781:119;939:1;964:64;1020:7;1011:6;1000:9;996:22;964:64;:::i;:::-;954:74;;910:128;694:351;;;;:::o;1048:704:0:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@changePrice_81": {
									"entryPoint": 203,
									"id": 81,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@register_69": {
									"entryPoint": 97,
									"id": 69,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_uint256": {
									"entryPoint": 339,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 360,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 306,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 301,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 316,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1022:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:1",
														"type": ""
													}
												],
												"src": "7:75:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "400:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:1",
														"type": ""
													}
												],
												"src": "334:77:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "460:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "517:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "526:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "529:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "519:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "519:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "519:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "483:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "508:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "490:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "490:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "480:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "480:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "473:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "473:43:1"
															},
															"nodeType": "YulIf",
															"src": "470:63:1"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "453:5:1",
														"type": ""
													}
												],
												"src": "417:122:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "597:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "607:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "629:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "616:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "616:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "607:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "672:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "645:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "645:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "645:33:1"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "575:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "583:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "591:5:1",
														"type": ""
													}
												],
												"src": "545:139:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "756:263:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "802:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "804:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "804:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "804:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "777:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "786:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "773:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "773:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "798:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "769:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "769:32:1"
															},
															"nodeType": "YulIf",
															"src": "766:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "895:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "910:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "924:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "914:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "939:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "974:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "985:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "970:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "970:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "994:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "949:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "949:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "939:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "726:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "737:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "749:6:1",
														"type": ""
													}
												],
												"src": "690:329:1"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106100295760003560e01c80631aa3a0081461002e578063a2b40d1914610038575b600080fd5b610036610061565b005b34801561004457600080fd5b5061005f600480360381019061005a9190610168565b6100cb565b005b6002548034101561007157600080fd5b60018060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461012357600080fd5b8060028190555050565b600080fd5b6000819050919050565b61014581610132565b811461015057600080fd5b50565b6000813590506101628161013c565b92915050565b60006020828403121561017e5761017d61012d565b5b600061018c84828501610153565b9150509291505056fea26469706673582212203aef4eb74453bc0cbb664b975d14cb8a390404b18c035f141d05d733532c5d4f64736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x29 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1AA3A008 EQ PUSH2 0x2E JUMPI DUP1 PUSH4 0xA2B40D19 EQ PUSH2 0x38 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x36 PUSH2 0x61 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x44 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5A SWAP2 SWAP1 PUSH2 0x168 JUMP JUMPDEST PUSH2 0xCB JUMP JUMPDEST STOP JUMPDEST PUSH1 0x2 SLOAD DUP1 CALLVALUE LT ISZERO PUSH2 0x71 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x123 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x2 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x145 DUP2 PUSH2 0x132 JUMP JUMPDEST DUP2 EQ PUSH2 0x150 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x162 DUP2 PUSH2 0x13C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x17E JUMPI PUSH2 0x17D PUSH2 0x12D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x18C DUP5 DUP3 DUP6 ADD PUSH2 0x153 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GASPRICE 0xEF 0x4E 0xB7 PREVRANDAO MSTORE8 0xBC 0xC 0xBB PUSH7 0x4B975D14CB8A39 DIV DIV 0xB1 DUP13 SUB 0x5F EQ SAR SDIV 0xD7 CALLER MSTORE8 0x2C 0x5D 0x4F PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "1048:704:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;1396:148;;;:::i;:::-;;1663:81;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1396:148;1437:5;;934;921:9;:18;;913:27;;;;;;1533:4:::1;1499:19:::0;:31:::1;1519:10;1499:31;;;;;;;;;;;;;;;;:38;;;;;;;;;;;;;;;;;;1396:148:::0;:::o;1663:81::-;681:5;;;;;;;;;;667:19;;:10;:19;;;659:28;;;;;;1731:6:::1;1723:5;:14;;;;1663:81:::0;:::o;88:117:1:-;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:139::-;591:5;629:6;616:20;607:29;;645:33;672:5;645:33;:::i;:::-;545:139;;;;:::o;690:329::-;749:6;798:2;786:9;777:7;773:23;769:32;766:119;;;804:79;;:::i;:::-;766:119;924:1;949:53;994:7;985:6;974:9;970:22;949:53;:::i;:::-;939:63;;895:117;690:329;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "91800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"changePrice(uint256)": "24687",
								"register()": "26584"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1048,
									"end": 1752,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 1048,
									"end": 1752,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1048,
									"end": 1752,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1230,
									"end": 1316,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 1230,
									"end": 1316,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1230,
									"end": 1316,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 1230,
									"end": 1316,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1230,
									"end": 1316,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1230,
									"end": 1316,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1230,
									"end": 1316,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1230,
									"end": 1316,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1230,
									"end": 1316,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1230,
									"end": 1316,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1230,
									"end": 1316,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1230,
									"end": 1316,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1230,
									"end": 1316,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1230,
									"end": 1316,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 1230,
									"end": 1316,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 1230,
									"end": 1316,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1230,
									"end": 1316,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1230,
									"end": 1316,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 1230,
									"end": 1316,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 1230,
									"end": 1316,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 1230,
									"end": 1316,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1230,
									"end": 1316,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1230,
									"end": 1316,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1230,
									"end": 1316,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1230,
									"end": 1316,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1230,
									"end": 1316,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1230,
									"end": 1316,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1230,
									"end": 1316,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1230,
									"end": 1316,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 1230,
									"end": 1316,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1230,
									"end": 1316,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1230,
									"end": 1316,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 1230,
									"end": 1316,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1230,
									"end": 1316,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 1230,
									"end": 1316,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 395,
									"end": 405,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 387,
									"end": 392,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 387,
									"end": 392,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 387,
									"end": 405,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 387,
									"end": 405,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 387,
									"end": 405,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 387,
									"end": 405,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 387,
									"end": 405,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 387,
									"end": 405,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 387,
									"end": 405,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 387,
									"end": 405,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 387,
									"end": 405,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 387,
									"end": 405,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 387,
									"end": 405,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 387,
									"end": 405,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 387,
									"end": 405,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 387,
									"end": 405,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 387,
									"end": 405,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 387,
									"end": 405,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 387,
									"end": 405,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 387,
									"end": 405,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1287,
									"end": 1299,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1279,
									"end": 1284,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 1279,
									"end": 1299,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1279,
									"end": 1299,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1279,
									"end": 1299,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1279,
									"end": 1299,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1230,
									"end": 1316,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1048,
									"end": 1752,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1048,
									"end": 1752,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 334,
									"end": 411,
									"name": "tag",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 334,
									"end": 411,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 400,
									"end": 405,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 389,
									"end": 405,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 389,
									"end": 405,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 334,
									"end": 411,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 334,
									"end": 411,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 334,
									"end": 411,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 334,
									"end": 411,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 417,
									"end": 539,
									"name": "tag",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 417,
									"end": 539,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 490,
									"end": 514,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 508,
									"end": 513,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 490,
									"end": 514,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 490,
									"end": 514,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 490,
									"end": 514,
									"name": "tag",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 490,
									"end": 514,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 483,
									"end": 488,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 480,
									"end": 515,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 470,
									"end": 533,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 470,
									"end": 533,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 529,
									"end": 530,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 526,
									"end": 527,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 519,
									"end": 531,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 470,
									"end": 533,
									"name": "tag",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 470,
									"end": 533,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 417,
									"end": 539,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 417,
									"end": 539,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 545,
									"end": 688,
									"name": "tag",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 545,
									"end": 688,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 602,
									"end": 607,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 633,
									"end": 639,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 627,
									"end": 640,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 618,
									"end": 640,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 618,
									"end": 640,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 649,
									"end": 682,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 676,
									"end": 681,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 649,
									"end": 682,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 649,
									"end": 682,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 649,
									"end": 682,
									"name": "tag",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 649,
									"end": 682,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 545,
									"end": 688,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 545,
									"end": 688,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 545,
									"end": 688,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 545,
									"end": 688,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 545,
									"end": 688,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 694,
									"end": 1045,
									"name": "tag",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 694,
									"end": 1045,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 764,
									"end": 770,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 813,
									"end": 815,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 801,
									"end": 810,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 792,
									"end": 799,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 788,
									"end": 811,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 784,
									"end": 816,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 781,
									"end": 900,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 781,
									"end": 900,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 781,
									"end": 900,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 819,
									"end": 898,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 819,
									"end": 898,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 819,
									"end": 898,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 819,
									"end": 898,
									"name": "tag",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 819,
									"end": 898,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 781,
									"end": 900,
									"name": "tag",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 781,
									"end": 900,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 939,
									"end": 940,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 964,
									"end": 1028,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 1020,
									"end": 1027,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1011,
									"end": 1017,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1000,
									"end": 1009,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 996,
									"end": 1018,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 964,
									"end": 1028,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 964,
									"end": 1028,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 964,
									"end": 1028,
									"name": "tag",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 964,
									"end": 1028,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 954,
									"end": 1028,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 954,
									"end": 1028,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 910,
									"end": 1038,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 694,
									"end": 1045,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 694,
									"end": 1045,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 694,
									"end": 1045,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 694,
									"end": 1045,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 694,
									"end": 1045,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1048,
									"end": 1752,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1048,
									"end": 1752,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1048,
									"end": 1752,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1048,
									"end": 1752,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1048,
									"end": 1752,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1048,
									"end": 1752,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1048,
									"end": 1752,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 1048,
									"end": 1752,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1048,
									"end": 1752,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212203aef4eb74453bc0cbb664b975d14cb8a390404b18c035f141d05d733532c5d4f64736f6c63430008120033",
									".code": [
										{
											"begin": 1048,
											"end": 1752,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 1048,
											"end": 1752,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1048,
											"end": 1752,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1048,
											"end": 1752,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1048,
											"end": 1752,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1048,
											"end": 1752,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1048,
											"end": 1752,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1048,
											"end": 1752,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1048,
											"end": 1752,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1048,
											"end": 1752,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 1048,
											"end": 1752,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 1048,
											"end": 1752,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 1048,
											"end": 1752,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1048,
											"end": 1752,
											"name": "PUSH",
											"source": 0,
											"value": "1AA3A008"
										},
										{
											"begin": 1048,
											"end": 1752,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1048,
											"end": 1752,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1048,
											"end": 1752,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1048,
											"end": 1752,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1048,
											"end": 1752,
											"name": "PUSH",
											"source": 0,
											"value": "A2B40D19"
										},
										{
											"begin": 1048,
											"end": 1752,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1048,
											"end": 1752,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1048,
											"end": 1752,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1048,
											"end": 1752,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1048,
											"end": 1752,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1048,
											"end": 1752,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1048,
											"end": 1752,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1048,
											"end": 1752,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1396,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1396,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1396,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1396,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1396,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1396,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1396,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1396,
											"end": 1544,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1663,
											"end": 1744,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1663,
											"end": 1744,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1663,
											"end": 1744,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1663,
											"end": 1744,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1663,
											"end": 1744,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1663,
											"end": 1744,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1663,
											"end": 1744,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1663,
											"end": 1744,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1663,
											"end": 1744,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1663,
											"end": 1744,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1663,
											"end": 1744,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1663,
											"end": 1744,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1663,
											"end": 1744,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1663,
											"end": 1744,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1663,
											"end": 1744,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1663,
											"end": 1744,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1663,
											"end": 1744,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1663,
											"end": 1744,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1663,
											"end": 1744,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1663,
											"end": 1744,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1663,
											"end": 1744,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1663,
											"end": 1744,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1663,
											"end": 1744,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1663,
											"end": 1744,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1663,
											"end": 1744,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1663,
											"end": 1744,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1663,
											"end": 1744,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1663,
											"end": 1744,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1663,
											"end": 1744,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1663,
											"end": 1744,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1663,
											"end": 1744,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1663,
											"end": 1744,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1663,
											"end": 1744,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1396,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1396,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1437,
											"end": 1442,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1437,
											"end": 1442,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 934,
											"end": 939,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 921,
											"end": 930,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 921,
											"end": 939,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 921,
											"end": 939,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 913,
											"end": 940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 913,
											"end": 940,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 913,
											"end": 940,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 913,
											"end": 940,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 913,
											"end": 940,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 913,
											"end": 940,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 913,
											"end": 940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1533,
											"end": 1537,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1499,
											"end": 1518,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1499,
											"end": 1530,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1519,
											"end": 1529,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1499,
											"end": 1530,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1499,
											"end": 1530,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1499,
											"end": 1530,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1499,
											"end": 1530,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1499,
											"end": 1530,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1499,
											"end": 1530,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1499,
											"end": 1530,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1499,
											"end": 1530,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1499,
											"end": 1530,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1499,
											"end": 1530,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1499,
											"end": 1530,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1499,
											"end": 1530,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1499,
											"end": 1530,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1499,
											"end": 1530,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1499,
											"end": 1530,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1499,
											"end": 1530,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1499,
											"end": 1537,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1499,
											"end": 1537,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1499,
											"end": 1537,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1499,
											"end": 1537,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1499,
											"end": 1537,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1499,
											"end": 1537,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 1499,
											"end": 1537,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1499,
											"end": 1537,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1499,
											"end": 1537,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1499,
											"end": 1537,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1499,
											"end": 1537,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1499,
											"end": 1537,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1499,
											"end": 1537,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1499,
											"end": 1537,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1499,
											"end": 1537,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 1499,
											"end": 1537,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1499,
											"end": 1537,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1499,
											"end": 1537,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1396,
											"end": 1544,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1396,
											"end": 1544,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1663,
											"end": 1744,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1663,
											"end": 1744,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 681,
											"end": 686,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 681,
											"end": 686,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 681,
											"end": 686,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 681,
											"end": 686,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 681,
											"end": 686,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 681,
											"end": 686,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 681,
											"end": 686,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 681,
											"end": 686,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 681,
											"end": 686,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 681,
											"end": 686,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 667,
											"end": 686,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 667,
											"end": 686,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 667,
											"end": 677,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 667,
											"end": 686,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 667,
											"end": 686,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 667,
											"end": 686,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 659,
											"end": 687,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 659,
											"end": 687,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 659,
											"end": 687,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 659,
											"end": 687,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 659,
											"end": 687,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 659,
											"end": 687,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 659,
											"end": 687,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1731,
											"end": 1737,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1723,
											"end": 1728,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1723,
											"end": 1737,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1723,
											"end": 1737,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1723,
											"end": 1737,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1723,
											"end": 1737,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1663,
											"end": 1744,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1663,
											"end": 1744,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 334,
											"end": 411,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 334,
											"end": 411,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 400,
											"end": 405,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 389,
											"end": 405,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 389,
											"end": 405,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 334,
											"end": 411,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 334,
											"end": 411,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 417,
											"end": 539,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 417,
											"end": 539,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 490,
											"end": 514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 490,
											"end": 514,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 490,
											"end": 514,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 483,
											"end": 488,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 480,
											"end": 515,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 470,
											"end": 533,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 529,
											"end": 530,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 526,
											"end": 527,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 519,
											"end": 531,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 470,
											"end": 533,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 417,
											"end": 539,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 417,
											"end": 539,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 545,
											"end": 684,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 591,
											"end": 596,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 635,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 616,
											"end": 636,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 607,
											"end": 636,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 607,
											"end": 636,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 672,
											"end": 677,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 645,
											"end": 678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 645,
											"end": 678,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 645,
											"end": 678,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 749,
											"end": 755,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 798,
											"end": 800,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 786,
											"end": 795,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 777,
											"end": 784,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 773,
											"end": 796,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 769,
											"end": 801,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 766,
											"end": 885,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 766,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 766,
											"end": 885,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 804,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 804,
											"end": 883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 804,
											"end": 883,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 766,
											"end": 885,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 766,
											"end": 885,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 924,
											"end": 925,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 994,
											"end": 1001,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 985,
											"end": 991,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 974,
											"end": 983,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 970,
											"end": 992,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 949,
											"end": 1002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 939,
											"end": 1002,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 939,
											"end": 1002,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 895,
											"end": 1012,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 690,
											"end": 1019,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"learnModifires.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"changePrice(uint256)": "a2b40d19",
							"register()": "1aa3a008"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"initialPrice\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"}],\"name\":\"changePrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"register\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"learnModifires.sol\":\"Register\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"learnModifires.sol\":{\"keccak256\":\"0x9af575fa4debcd72a29ecce5301f647dcfd41377117d7a6ae4b95b6ee75cd591\",\"urls\":[\"bzz-raw://df8346fbee9d4e369eb7b41e9512dcd7a493d6247ef4381d30fcd85047adbd55\",\"dweb:/ipfs/QmPTKrt8553zdwPPy3sePdXEHqKYDN6SFeT2s5EA6zVZFT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 3,
								"contract": "learnModifires.sol:Register",
								"label": "owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 43,
								"contract": "learnModifires.sol:Register",
								"label": "registeredAddresses",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 45,
								"contract": "learnModifires.sol:Register",
								"label": "price",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> learnModifires.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "learnModifires.sol",
					"start": -1
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2462",
				"formattedMessage": "Warning: Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.\n  --> learnModifires.sol:13:5:\n   |\n13 |     constructor() public {\n   |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.",
				"severity": "warning",
				"sourceLocation": {
					"end": 414,
					"file": "learnModifires.sol",
					"start": 355
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2462",
				"formattedMessage": "Warning: Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.\n  --> learnModifires.sol:45:4:\n   |\n45 |    constructor(uint initialPrice) public { \n   |    ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.",
				"severity": "warning",
				"sourceLocation": {
					"end": 1316,
					"file": "learnModifires.sol",
					"start": 1230
				},
				"type": "Warning"
			}
		],
		"sources": {
			"learnModifires.sol": {
				"ast": {
					"absolutePath": "learnModifires.sol",
					"exportedSymbols": {
						"Owner": [
							37
						],
						"Register": [
							82
						]
					},
					"id": 83,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:33:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Owner",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 37,
							"linearizedBaseContracts": [
								37
							],
							"name": "Owner",
							"nameLocation": "187:5:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 3,
									"mutability": "mutable",
									"name": "owner",
									"nameLocation": "241:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 37,
									"src": "233:13:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "233:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 11,
										"nodeType": "Block",
										"src": "376:38:0",
										"statements": [
											{
												"expression": {
													"id": 9,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 6,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "387:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 7,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "395:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 8,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "399:6:0",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "395:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "387:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 10,
												"nodeType": "ExpressionStatement",
												"src": "387:18:0"
											}
										]
									},
									"id": 12,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "366:2:0"
									},
									"returnParameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "376:0:0"
									},
									"scope": 37,
									"src": "355:59:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 22,
										"nodeType": "Block",
										"src": "592:171:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 18,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 15,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "667:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 16,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "671:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "667:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 17,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3,
																"src": "681:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "667:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 14,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "659:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 19,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "659:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 20,
												"nodeType": "ExpressionStatement",
												"src": "659:28:0"
											},
											{
												"id": 21,
												"nodeType": "PlaceholderStatement",
												"src": "698:1:0"
											}
										]
									},
									"id": 23,
									"name": "onlyOwner",
									"nameLocation": "582:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "592:0:0"
									},
									"src": "573:190:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 35,
										"nodeType": "Block",
										"src": "802:158:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 31,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 28,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "921:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 29,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "925:5:0",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "921:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 30,
																"name": "price",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 25,
																"src": "934:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "921:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 27,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "913:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 32,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "913:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 33,
												"nodeType": "ExpressionStatement",
												"src": "913:27:0"
											},
											{
												"id": 34,
												"nodeType": "PlaceholderStatement",
												"src": "951:1:0"
											}
										]
									},
									"id": 36,
									"name": "costs",
									"nameLocation": "784:5:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 26,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 25,
												"mutability": "mutable",
												"name": "price",
												"nameLocation": "795:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 36,
												"src": "790:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 24,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "790:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "789:12:0"
									},
									"src": "775:185:0",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 83,
							"src": "178:791:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 38,
										"name": "Owner",
										"nameLocations": [
											"1069:5:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 37,
										"src": "1069:5:0"
									},
									"id": 39,
									"nodeType": "InheritanceSpecifier",
									"src": "1069:5:0"
								}
							],
							"canonicalName": "Register",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 82,
							"linearizedBaseContracts": [
								82,
								37
							],
							"name": "Register",
							"nameLocation": "1057:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 43,
									"mutability": "mutable",
									"name": "registeredAddresses",
									"nameLocation": "1184:19:0",
									"nodeType": "VariableDeclaration",
									"scope": 82,
									"src": "1158:45:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 42,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 40,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1167:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1158:25:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 41,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "1178:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 45,
									"mutability": "mutable",
									"name": "price",
									"nameLocation": "1214:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 82,
									"src": "1209:10:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 44,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "1209:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 54,
										"nodeType": "Block",
										"src": "1268:48:0",
										"statements": [
											{
												"expression": {
													"id": 52,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 50,
														"name": "price",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 45,
														"src": "1279:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 51,
														"name": "initialPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 47,
														"src": "1287:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1279:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 53,
												"nodeType": "ExpressionStatement",
												"src": "1279:20:0"
											}
										]
									},
									"id": 55,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "initialPrice",
												"nameLocation": "1247:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 55,
												"src": "1242:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 46,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1242:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1241:19:0"
									},
									"returnParameters": {
										"id": 49,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1268:0:0"
									},
									"scope": 82,
									"src": "1230:86:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 68,
										"nodeType": "Block",
										"src": "1444:100:0",
										"statements": [
											{
												"expression": {
													"id": 66,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 61,
															"name": "registeredAddresses",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 43,
															"src": "1499:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 64,
														"indexExpression": {
															"expression": {
																"id": 62,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1519:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 63,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1523:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1519:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1499:31:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 65,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1533:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "1499:38:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 67,
												"nodeType": "ExpressionStatement",
												"src": "1499:38:0"
											}
										]
									},
									"functionSelector": "1aa3a008",
									"id": 69,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 58,
													"name": "price",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 45,
													"src": "1437:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 59,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 57,
												"name": "costs",
												"nameLocations": [
													"1431:5:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 36,
												"src": "1431:5:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1431:12:0"
										}
									],
									"name": "register",
									"nameLocation": "1405:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1413:2:0"
									},
									"returnParameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1444:0:0"
									},
									"scope": 82,
									"src": "1396:148:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 80,
										"nodeType": "Block",
										"src": "1714:30:0",
										"statements": [
											{
												"expression": {
													"id": 78,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 76,
														"name": "price",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 45,
														"src": "1723:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 77,
														"name": "_price",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 71,
														"src": "1731:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1723:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 79,
												"nodeType": "ExpressionStatement",
												"src": "1723:14:0"
											}
										]
									},
									"functionSelector": "a2b40d19",
									"id": 81,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 74,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 73,
												"name": "onlyOwner",
												"nameLocations": [
													"1704:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 23,
												"src": "1704:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1704:9:0"
										}
									],
									"name": "changePrice",
									"nameLocation": "1672:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "_price",
												"nameLocation": "1689:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 81,
												"src": "1684:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 70,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1684:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:13:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1714:0:0"
									},
									"scope": 82,
									"src": "1663:81:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 83,
							"src": "1048:704:0",
							"usedErrors": []
						}
					],
					"src": "0:1754:0"
				},
				"id": 0
			}
		}
	}
}